################################################################################
#
# Test Run Specific Settings
#
# Use this section to configure an (optional) file which contains the settings
# specific to a certain load test run. This is useful to externalize the
# definition of a certain load profile or a set of test conditions. This way,
# many of these configurations can be defined and prepared in advance and used
# as needed. For example, to switch to another load profile, just name the
# respective properties file.
#
################################################################################

## The file with test run specific settings.
com.xceptance.xlt.testPropertiesFile = test.properties


################################################################################
#
# General Properties and Variables 
#
################################################################################

## Variables
host = https://localhost:8443

## Whether to append a UUID to the User-Agent HTTP request header.
userAgent.UID = false


################################################################################
#
# Test Case Mapping
#
# Maps the test case class onto a load test name. The load test name will be
# referenced later in the load test configuration. You can map the same class
# to multiple load test names if needed.
#
################################################################################

com.xceptance.xlt.loadtests.URLTestCase.class = com.xceptance.xlt.nocoding.api.GenericNocodingTestCase

com.xceptance.xlt.loadtests.TDHomepageAndStaticCSV.class = posters.tests.nocoding.TDHomepageAndStaticCSV
com.xceptance.xlt.loadtests.TLHomepageAndStaticCSV.class = posters.tests.nocoding.TLHomepageAndStaticCSV
com.xceptance.xlt.loadtests.TLLogin.class = posters.tests.nocoding.TLLogin
com.xceptance.xlt.loadtests.TDOrderCSV.class = posters.tests.nocoding.TDOrderCSV
com.xceptance.xlt.loadtests.TDOrder.class  = posters.tests.nocoding.TDOrder
com.xceptance.xlt.loadtests.TLRegister.class  = posters.tests.nocoding.TLRegister
com.xceptance.xlt.loadtests.TLOrderCSV.class = posters.tests.nocoding.TLOrderCSV
com.xceptance.xlt.loadtests.TLSearchCSV.class = posters.tests.nocoding.TLSearchCSV
com.xceptance.xlt.loadtests.TLExampleSubSelection.class = posters.tests.nocoding.TLExampleSubSelection


#########################################################################
#
# Test-Case-Specific Property Overrides
#
#########################################################################

## TLExampleSubSelection
TLExampleSubSelection.com.xceptance.xlt.nocoding.mode = light
TLExampleSubSelection.com.xceptance.xlt.nocoding.redirect = false

## TLSearchCSV
TLSearchCSV.com.xceptance.xlt.nocoding.mode = light

## TLOrderCSV
TLOrderCSV.com.xceptance.xlt.nocoding.mode = light

## TLRegister
TLRegister.com.xceptance.xlt.nocoding.mode = light
TLRegister.com.xceptance.xlt.nocoding.redirect = false

## TDOrder
TDOrder.com.xceptance.xlt.nocoding.mode = dom
TDOrder.com.xceptance.xlt.nocoding.redirect = false

## TDOrderCSV
TDOrderCSV.com.xceptance.xlt.nocoding.mode = dom

## TLLogin
TLLogin.com.xceptance.xlt.nocoding.mode = light
TLLogin.com.xceptance.xlt.nocoding.redirect = false

## TLHomepageAndStaticCSV
TLHomepageAndStaticCSV.com.xceptance.xlt.nocoding.mode = light

## TDHomepageAndStaticCSV
TDHomepageAndStaticCSV.com.xceptance.xlt.nocoding.mode = dom


################################################################################
#
# Project-Specific Report Generator Settings
#
# When creating the report, all requests with the same name will go into the
# same bucket. This initial bucketing can be customized by renaming requests.
# Via renaming you can either create fewer, but more general buckets or more,
# but more specific buckets. Alternatively, you may also choose to delete
# certain requests altogether.
#
# This process is controlled by "request processing rules" (formerly known as
# "request merge rules"). A rule knows how to select all requests of interest
# and how to process them.
#
# You may specify one or more rules as outlined below:
#
#   com.xceptance.xlt.reportgenerator.requestMergeRules.<num>.<param> = <value>
#
# The rules are sorted numerically based on <num> and are applied in ascending
# order.
#
# The supported values for "<param>" are:
#
#   newName .................. The new request name (required, unless
#                              dropOnMatch is true).
#
#   namePattern [n] .......... Reg-ex defining a matching request name
#   transactionPattern [t] ... Reg-ex defining a matching transaction name
#   agentPattern [a] ......... Reg-ex defining a matching agent name
#   contentTypePattern [c] ... Reg-ex defining a matching response content type
#   statusCodePattern [s] .... Reg-ex defining a matching status code
#   urlPattern [u] ........... Reg-ex defining a matching request URL
#   runTimeRanges [r] ........ List of run time segment boundaries
#
#   stopOnMatch .............. Whether or not to process the next rule even if 
#                              the current rule applied (defaults to true).
#
#   dropOnMatch .............. Whether or not to discard a matching request
#                              instead of renaming it (defaults to false). If
#                              the rule applied, request processing will stop.
#
# If more than one pattern is given, all given patterns must match for the
# request to be processed.
#
# Note that newName may contain placeholders, which are replaced with the 
# specified capturing group from the respective pattern. The placeholder  
# format is as follows: {<category>:<capturingGroupIndex>}, where <category> is 
# the type code of the respective pattern (given in brackets above) and 
# <capturingGroupIndex> denotes the respective capturing group in the selected
# pattern (does not apply to runTimeRanges).
#
# You may also use just {<category>} as placeholder. Such placeholders do not
# require a pattern and are resolved to the full text of the respective request
# attribute.
#
# Excluding instead of Including
#
#   com.xceptance.xlt.reportgenerator.requestMergeRules.<num>.<param>.exclude = <value>
#
# All requests that match the exclude pattern will not be selected. For example, 
# to create a bucket for all non-JavaScript resources, you would setup a rule like that.
#
#   com.xceptance.xlt.reportgenerator.requestMergeRules.1.newName = {n:0} NonJS
#   com.xceptance.xlt.reportgenerator.requestMergeRules.1.namePattern = .+
#   com.xceptance.xlt.reportgenerator.requestMergeRules.1.contentTypePattern.exclude = javascript
#   com.xceptance.xlt.reportgenerator.requestMergeRules.1.stopOnMatch = false
# 
# Please note that an include pattern as well as an exclude pattern can be specified for 
# a pattern type at the same time. In this case, a request is selected if and only if it 
# matches the include pattern, but does not match the exclude pattern.
#
################################################################################

## First, we eliminate the sub-request naming pattern, because we do not need
## that at the moment. This turns all "name.1" or "name.1.1" and so on into "name".
com.xceptance.xlt.reportgenerator.requestMergeRules.0.newName = {n:1}
com.xceptance.xlt.reportgenerator.requestMergeRules.0.namePattern = ^([^\\.]*)(\\.[0-9]+)+$
com.xceptance.xlt.reportgenerator.requestMergeRules.0.contentTypePattern =  
com.xceptance.xlt.reportgenerator.requestMergeRules.0.statusCodePattern =
com.xceptance.xlt.reportgenerator.requestMergeRules.0.urlPattern = 
com.xceptance.xlt.reportgenerator.requestMergeRules.0.stopOnMatch = false

## All requests with URLs ending with ".js" are grouped under "<name> JS".
com.xceptance.xlt.reportgenerator.requestMergeRules.1.newName = {n:0} JS
com.xceptance.xlt.reportgenerator.requestMergeRules.1.namePattern = [^.]+
com.xceptance.xlt.reportgenerator.requestMergeRules.1.contentTypePattern =
com.xceptance.xlt.reportgenerator.requestMergeRules.1.statusCodePattern =
com.xceptance.xlt.reportgenerator.requestMergeRules.1.urlPattern = \\.js$
com.xceptance.xlt.reportgenerator.requestMergeRules.1.stopOnMatch = false

## All requests with URLs ending with common image file extension are grouped
## under "<name> Images".
com.xceptance.xlt.reportgenerator.requestMergeRules.3.newName = {n:0} Images  
com.xceptance.xlt.reportgenerator.requestMergeRules.3.namePattern = [^.]+
com.xceptance.xlt.reportgenerator.requestMergeRules.3.contentTypePattern =   
com.xceptance.xlt.reportgenerator.requestMergeRules.3.statusCodePattern =
com.xceptance.xlt.reportgenerator.requestMergeRules.3.urlPattern = \\.(gif|png|jpg|ico)$
com.xceptance.xlt.reportgenerator.requestMergeRules.3.stopOnMatch = false

## All requests with URLs ending with ".css" are grouped under "<name> CSS".
com.xceptance.xlt.reportgenerator.requestMergeRules.5.newName = {n:0} CSS
com.xceptance.xlt.reportgenerator.requestMergeRules.5.namePattern = [^.]+
com.xceptance.xlt.reportgenerator.requestMergeRules.5.contentTypePattern =
com.xceptance.xlt.reportgenerator.requestMergeRules.5.statusCodePattern =
com.xceptance.xlt.reportgenerator.requestMergeRules.5.urlPattern = \\.css$
com.xceptance.xlt.reportgenerator.requestMergeRules.5.stopOnMatch = false

## Append the host name. 
com.xceptance.xlt.reportgenerator.requestMergeRules.9.newName = {n:0} - {u:1}  
com.xceptance.xlt.reportgenerator.requestMergeRules.9.namePattern = .*
com.xceptance.xlt.reportgenerator.requestMergeRules.9.urlPattern = ^http[s]?://([^/]+)
com.xceptance.xlt.reportgenerator.requestMergeRules.9.stopOnMatch = false

## Finally, append the response code to each request name. This way, statistics
## are calculated separately for each response code. So, fast 500 error 
## responses for instance will not influence the statistics for normal 200 
## responses.  
com.xceptance.xlt.reportgenerator.requestMergeRules.10.newName = {n:0} [{s:0}]  
com.xceptance.xlt.reportgenerator.requestMergeRules.10.namePattern = .*
com.xceptance.xlt.reportgenerator.requestMergeRules.10.contentTypePattern =  
com.xceptance.xlt.reportgenerator.requestMergeRules.10.statusCodePattern = 30[0-9]+
com.xceptance.xlt.reportgenerator.requestMergeRules.10.urlPattern = 
com.xceptance.xlt.reportgenerator.requestMergeRules.10.stopOnMatch = false
